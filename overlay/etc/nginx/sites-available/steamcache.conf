#
# This minimal configuration is part of the steam cache docker image.
#

log_format steamcache-default '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" DEFAULT';
log_format steamcache-other '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" OTHER';
log_format steamcache-local '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" LOCAL';
log_format steamcache-remote '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" REMOTE';

server {
	listen 80;
	server_name *.cs.steampowered.com content1.steampowered.com content2.steampowered.com content3.steampowered.com content4.steampowered.com content5.steampowered.com content6.steampowered.com content7.steampowered.com content8.steampowered.com *.steamcontent.com *.steampipe.steamcontent.com;

	access_log /data/logs/access.log steamcache-default;
	error_log /data/logs/error.log;

    root   /data/cache/;
    index  index.html index.htm;

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

	proxy_temp_path /tmp/nginx/ 1 2;

	## Uncomment this line to proxy through steamcache.net.
	## This allows us to keep the online cache up-to-date for events
	## to rsync down to their own caches.
	## As a bonus, this also allows you to configure a single route to
	## direct your Steam download traffic down an alternative network
	## interface (e.g. 3G modem, second DSL line) from your primary
	## internet connection.
	resolver 8.8.4.4;

	location /depot/ {
		try_files $uri @mirror;
		access_log /data/logs/access.log steamcache-local;
	}

	location / {
		proxy_next_upstream error timeout http_404;

		proxy_pass http://$host$request_uri;
		proxy_redirect off;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		add_header X-Mirror-Upstream-Status $upstream_status;
		add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
		add_header X-Mirror-Status $upstream_cache_status;

		add_header Host $host;

		access_log /data/logs/access.log steamcache-other;
	}

	location @mirror {
		proxy_store on;
		proxy_store_access user:rw group:rw all:r;
		proxy_next_upstream error timeout http_404;
		proxy_pass http://$host$request_uri;
		proxy_redirect off;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		add_header X-Mirror-Upstream-Status $upstream_status;
		add_header X-Mirror-Upstream-Response-Time $upstream_response_time;
		add_header X-Mirror-Status $upstream_cache_status;

		access_log /data/logs/access.log steamcache-remote;
	}
}

